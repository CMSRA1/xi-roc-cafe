[(ComponentName(), NullCollector()),
 (FuncOnNumpyArrays(src_arrays = ['mht40_pt', 'met_pt'], out_name = 'MhtOverMet', func = <ufunc 'divide'>),
  NullCollector()),
 (AllwCount(name = 'All', selections = [LambdaStr(name = 'ev : ev.cutflowId[0] == 1', lambda_str = 'ev : ev.cutflowId[0] == 1'), LambdaStr(name = 'ev : ev.nIsoTracksVeto[0] <= 0', lambda_str = 'ev : ev.nIsoTracksVeto[0] <= 0'), LambdaStr(name = 'ev : ev.nJet40[0] >= 2', lambda_str = 'ev : ev.nJet40[0] >= 2'), LambdaStr(name = 'ev : ev.ht40[0] >= 200', lambda_str = 'ev : ev.ht40[0] >= 200'), LambdaStr(name = 'ev : ev.nJet100[0] >= 1', lambda_str = 'ev : ev.nJet100[0] >= 1'), LambdaStr(name = 'ev : ev.nJet40failedId[0] == 0', lambda_str = 'ev : ev.nJet40failedId[0] == 0'), LambdaStr(name = 'ev : ev.nJet40Fwd[0] == 0', lambda_str = 'ev : ev.nJet40Fwd[0] == 0'), LambdaStr(name = 'ev : -2.5 < ev.jet_eta[0] < 2.5', lambda_str = 'ev : -2.5 < ev.jet_eta[0] < 2.5'), LambdaStr(name = 'ev : 0.1 <= ev.jet_chHEF[0] < 0.95', lambda_str = 'ev : 0.1 <= ev.jet_chHEF[0] < 0.95'), LambdaStr(name = 'ev : 130 <= ev.mht40_pt[0]', lambda_str = 'ev : 130 <= ev.mht40_pt[0]'), LambdaStr(name = 'ev : ev.MhtOverMet[0] < 1.25', lambda_str = 'ev : ev.MhtOverMet[0] < 1.25')]), count = Count([[1, 'LambdaStr', 'ev : ev.cutflowId[0] == 1', 0, 0], [1, 'LambdaStr', 'ev : ev.nIsoTracksVeto[0] <= 0', 0, 0], [1, 'LambdaStr', 'ev : ev.nJet40[0] >= 2', 0, 0], [1, 'LambdaStr', 'ev : ev.ht40[0] >= 200', 0, 0], [1, 'LambdaStr', 'ev : ev.nJet100[0] >= 1', 0, 0], [1, 'LambdaStr', 'ev : ev.nJet40failedId[0] == 0', 0, 0], [1, 'LambdaStr', 'ev : ev.nJet40Fwd[0] == 0', 0, 0], [1, 'LambdaStr', 'ev : -2.5 < ev.jet_eta[0] < 2.5', 0, 0], [1, 'LambdaStr', 'ev : 0.1 <= ev.jet_chHEF[0] < 0.95', 0, 0], [1, 'LambdaStr', 'ev : 130 <= ev.mht40_pt[0]', 0, 0], [1, 'LambdaStr', 'ev : ev.MhtOverMet[0] < 1.25', 0, 0]]),
  Collector(resultsCombinationMethod = CombineIntoList(summaryColumnNames = ('depth', 'class', 'name', 'pass', 'total'), sort = False, datasetColumnName = 'component'), deliveryMethod = WriteListToFile(outPath = './tbl_001/QCD/tbl_cutflow.txt'), datasetReaderPairs = [])),
 (Reader(keyValComposer = KeyValueComposer(keyAttrNames = ('ht40', 'nJet40', 'mht40_pt', 'minOmegaTilde'), binnings = (Binning(boundaries = (0, 200, 400, 800, 1200), underflow_bin = -inf, overflow_bin = 1200, valid = ReturnTrue()), Binning(boundaries = (1, 2, 3, 6, 9), underflow_bin = -inf, overflow_bin = 9, valid = ReturnTrue()), Binning(boundaries = (0, 130, 200, 400, 800), underflow_bin = -inf, overflow_bin = 800, valid = ReturnTrue()), Round(width = 0.05, aboundary = 0, min = 0, underflow_bin = None, max = None, overflow_bin = None, valid = ReturnTrue())), keyIndices = None, valAttrNames = None, valIndices = None), summarizer = Summarizer(Summary = <class 'alphatwirl.summary.Count.Count'>, results = defaultdict(<class 'alphatwirl.summary.Count.Count'>, {})), weightCalculator = WeightCalculatorOne(), nextKeyComposer = NextKeyComposer(binnings = (Binning(boundaries = (0, 200, 400, 800, 1200), underflow_bin = -inf, overflow_bin = 1200, valid = ReturnTrue()), Binning(boundaries = (1, 2, 3, 6, 9), underflow_bin = -inf, overflow_bin = 9, valid = ReturnTrue()), Binning(boundaries = (0, 130, 200, 400, 800), underflow_bin = -inf, overflow_bin = 800, valid = ReturnTrue()), Round(width = 0.05, aboundary = 0, min = 0, underflow_bin = None, max = None, overflow_bin = None, valid = ReturnTrue())))), nevents = None),
  Collector(resultsCombinationMethod = CombineIntoList(summaryColumnNames = ('htbin', 'njetbin', 'mhtbin', 'minOmegaTilde', 'n', 'nvar'), sort = True, datasetColumnName = 'component'), deliveryMethod = WriteListToFile(outPath = './tbl_001/QCD/tbl_n_component.htbin.njetbin.mhtbin.minOmegaTilde.txt'), datasetReaderPairs = [])),
 (Reader(keyValComposer = KeyValueComposer(keyAttrNames = ('ht40', 'nJet40', 'mht40_pt', 'xi'), binnings = (Binning(boundaries = (0, 200, 400, 800, 1200), underflow_bin = -inf, overflow_bin = 1200, valid = ReturnTrue()), Binning(boundaries = (1, 2, 3, 6, 9), underflow_bin = -inf, overflow_bin = 9, valid = ReturnTrue()), Binning(boundaries = (0, 130, 200, 400, 800), underflow_bin = -inf, overflow_bin = 800, valid = ReturnTrue()), Round(width = 0.05, aboundary = 0, min = 0, underflow_bin = None, max = None, overflow_bin = None, valid = ReturnTrue())), keyIndices = None, valAttrNames = None, valIndices = None), summarizer = Summarizer(Summary = <class 'alphatwirl.summary.Count.Count'>, results = defaultdict(<class 'alphatwirl.summary.Count.Count'>, {})), weightCalculator = WeightCalculatorOne(), nextKeyComposer = NextKeyComposer(binnings = (Binning(boundaries = (0, 200, 400, 800, 1200), underflow_bin = -inf, overflow_bin = 1200, valid = ReturnTrue()), Binning(boundaries = (1, 2, 3, 6, 9), underflow_bin = -inf, overflow_bin = 9, valid = ReturnTrue()), Binning(boundaries = (0, 130, 200, 400, 800), underflow_bin = -inf, overflow_bin = 800, valid = ReturnTrue()), Round(width = 0.05, aboundary = 0, min = 0, underflow_bin = None, max = None, overflow_bin = None, valid = ReturnTrue())))), nevents = None),
  Collector(resultsCombinationMethod = CombineIntoList(summaryColumnNames = ('htbin', 'njetbin', 'mhtbin', 'xi', 'n', 'nvar'), sort = True, datasetColumnName = 'component'), deliveryMethod = WriteListToFile(outPath = './tbl_001/QCD/tbl_n_component.htbin.njetbin.mhtbin.xi.txt'), datasetReaderPairs = []))]
